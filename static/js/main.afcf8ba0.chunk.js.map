{"version":3,"sources":["components/ControlledCarousel.jsx","components/Home.jsx","components/footer.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js","assets /car.png","assets /car2.png","assets /car3.png","assets /car4.png","assets /bsweet.png"],"names":["mainCarousel","className","autoPlay","src","car","alt","car2","car3","car4","Component","Home","useStyles","makeStyles","Footer","classes","React","useState","value","setValue","BottomNavigation","onChange","newValue","root","href","target","BottomNavigationAction","icon","Navigation","Navbar","bg","expand","Brand","logo","Toggle","aria-controls","Collapse","Link","NavDropdown","title","id","Item","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"0WAiCeA,E,iLArBX,OACE,yBAAKC,UAAU,gBACb,kBAAC,WAAD,CAAUC,UAAQ,GAChB,6BACE,yBAAKD,UAAU,OAAOE,IAAKC,IAAKC,IAAI,eAEtC,6BACE,yBAAKJ,UAAU,OAAOE,IAAKG,IAAMD,IAAI,eAEvC,6BACE,yBAAKJ,UAAU,OAAOE,IAAKI,IAAMF,IAAI,eAEvC,6BACE,yBAAKJ,UAAU,OAAOE,IAAKK,IAAMH,IAAI,qB,GAftBI,aCGZC,EAVF,WACX,OACE,yBAAKT,UAAU,aAEb,kBAAC,EAAD,Q,+FCGAU,EAAYC,YAAW,IAwBdC,EAtBA,WAEb,IAAMC,EAAUH,IAFG,EAGOI,IAAMC,SAAS,WAHtB,mBAGZC,EAHY,KAGLC,EAHK,KAUnB,OACE,yBAAKjB,UAAU,UACb,kBAACkB,EAAA,EAAD,CAAkBF,MAAOA,EAAOG,SAPf,SAACC,GACpBH,EAASG,IAMiDpB,UAAWa,EAAQQ,MACzE,uBAAGC,KAAK,4BAA4BC,OAAO,SAA3C,IAAoD,kBAACC,EAAA,EAAD,CAAwBR,MAAM,UAAUS,KAAM,kBAAC,IAAD,QAAlG,KACA,uBAAGH,KAAK,yCAAyCC,OAAO,SAAxD,IAAiE,kBAACC,EAAA,EAAD,CAAwBR,MAAM,UAAUS,KAAM,kBAAC,IAAD,QAA/G,KACA,uBAAGH,KAAK,2BAA2BC,OAAO,SAA1C,IAAmD,kBAACC,EAAA,EAAD,CAAwBR,MAAM,UAAUS,KAAM,kBAAC,IAAD,QAAjG,Q,qDCYOC,EAlCI,WACjB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcR,KAAK,KACjB,yBACEpB,IAAK6B,IACL/B,UAAU,cACVI,IAAI,UAIR,kBAACuB,EAAA,EAAOK,OAAR,CAAeC,gBAAc,sBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBlC,UAAU,gDACzB,kBAAC,IAAD,KACE,kBAAC,IAAImC,KAAL,CAAUb,KAAK,UAAf,aACA,kBAACc,EAAA,EAAD,CAAaC,MAAM,SAASC,GAAG,sBAC7B,kBAACF,EAAA,EAAYG,KAAb,CAAkBjB,KAAK,aAAvB,YACA,kBAACc,EAAA,EAAYG,KAAb,CAAkBjB,KAAK,SAAvB,QACA,kBAACc,EAAA,EAAYG,KAAb,CAAkBjB,KAAK,UAAvB,SACA,kBAACc,EAAA,EAAYG,KAAb,CAAkBjB,KAAK,YAAvB,YAEF,kBAAC,IAAIa,KAAL,CAAUb,KAAK,YAAf,gB,gBCYGkB,G,wLAtBX,OACE,oCACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlC,OAUvC,kBAAC,EAAD,W,GAlBUK,IAAMN,YCHJoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.afcf8ba0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\n// mainCarousel Images\nimport car from '../assets /car.png';\nimport car2 from '../assets /car2.png';\nimport car3 from '../assets /car3.png';\nimport car4 from '../assets /car4.png';\n\nclass mainCarousel extends Component {\n  render() {\n    return (\n      <div className=\"mainCarousel\">\n        <Carousel autoPlay>\n          <div>\n            <img className='img1' src={car} alt=\"Pic_Image\" />\n          </div>\n          <div>\n            <img className='img1' src={car2} alt=\"Pic_Image\" />\n          </div>\n          <div>\n            <img className='img1' src={car3} alt=\"Pic_Image\" />\n          </div>\n          <div>\n            <img className='img1' src={car4} alt=\"Pic_Image\" />\n          </div>\n        </Carousel>\n      </div>\n    );\n  }\n};\n\nexport default mainCarousel;\n","import React from 'react';\nimport Carousel from './ControlledCarousel';\n\nconst Home = () => {\n  return (\n    <div className=\"page Home\">\n\n      <Carousel />\n    </div>\n\n  )\n}\n\nexport default Home;","import React from 'react';\nimport './Footer.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\n\nconst useStyles = makeStyles({\n})\nconst Footer = () => {\n  // debugger;\n  const classes = useStyles();\n  const [value, setValue] = React.useState('recents');\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n\n  return (\n    <div className='Footer'>\n      <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n        <a href=\"https://www.facebook.com/\" target='blank'> <BottomNavigationAction value=\"recents\" icon={<FacebookIcon />} /> </a>\n        <a href=\"https://www.instagram.com/sbournesweet\" target='blank'> <BottomNavigationAction value=\"recents\" icon={<InstagramIcon />} /> </a>\n        <a href=\"https://www.twitter.com/\" target='blank'> <BottomNavigationAction value=\"recents\" icon={<TwitterIcon />} /> </a>\n\n      </BottomNavigation>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Nav.css'\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport logo from '../assets /bsweet.png'\n\nconst Navigation = () => {\n  return (\n    <>\n      <Navbar bg=\"white\" expand=\"sm\" >\n        <Navbar.Brand href=\"/\">\n          <img\n            src={logo}\n            className='bsweet_logo'\n            alt=\"Logo\"\n          />\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav \" />\n        <Navbar.Collapse className=\"collapse navbar-collapse justify-content-end\">\n          <Nav >\n            <Nav.Link href=\"/about\">OUR STORY</Nav.Link>\n            <NavDropdown title=\"SWEETS\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/desserts\">DESSERTS</NavDropdown.Item>\n              <NavDropdown.Item href=\"/pies\">PIES</NavDropdown.Item>\n              <NavDropdown.Item href=\"/cakes\">CAKES</NavDropdown.Item>\n              <NavDropdown.Item href=\"/cookies\">COOKIES</NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link href=\"/contact\">CONNECT</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar >\n\n    </>\n\n  );\n}\n\n\n\nexport default Navigation;","import React from 'react';\n// import Contact from './components/Contact';\n// import About from './components/About';\nimport Home from './components/Home';\nimport Footer from './components/footer';\nimport Navigation from './components/Navigation';\n// import Desserts from './components/Desserts'\n// import Pie from './components/Cakes'\n// import Cakes from './components/Pies'\n// import Cookies from './components/Cookies'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Router>\n          <div>\n            <Navigation />\n            <Switch>\n              <Route path='/' exact component={Home} />\n              {/* <Route path='/about' component={About} />\n              <Route path='/contact' component={Contact} />\n              <Route path='/desserts' component={Desserts} />\n              <Route path='/pies' component={Pie} />\n              <Route path='/cakes' component={Cakes} />\n              <Route path='/cookies' component={Cookies} /> */}\n            </Switch>\n          </div>\n        </Router>\n        <Footer />\n      </>\n\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/car.6110131f.png\";","module.exports = __webpack_public_path__ + \"static/media/car2.cafadadf.png\";","module.exports = __webpack_public_path__ + \"static/media/car3.6e968c9f.png\";","module.exports = __webpack_public_path__ + \"static/media/car4.d0012ef1.png\";","module.exports = __webpack_public_path__ + \"static/media/bsweet.d9487ca1.png\";"],"sourceRoot":""}